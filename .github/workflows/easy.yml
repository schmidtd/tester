---

name: Easy Button

env:
  PUSH_BUILDREF: './tools/config/buildref-AAP_2.3.json'
  PUSH_TRUE: true

on:
  push:
    branches: [ dls*, main, release-* ]

  workflow_dispatch:
    inputs:
      manifest_file:
        description: 'Path to AAP manifest file'
        required: true
        default: './manifests/AAP_2.3-2023-01-31.json'
      buildref:
        description: 'Path to build reference file'
        required: true
        default: './tools/config/buildref-AAP_2.3.json'

jobs:
  easy:
    runs-on: ubuntu-latest
    name: easy
    permissions:
      id-token: write
      contents: read

    steps:
      # Establish snapshot datestamp
      - name: 'Do something'
        run: |
          echo "Branch: ${{ github.ref_name }}"
          echo "Event: ${{ github.event_name }}"
          echo "Manifest File: ${{ github.event.inputs.manifest_file }}"
          echo "Default Build Reference File:" $PUSH_BUILDREF
          if [[ ${{ github.ref_name }} == release-* ]] ; 
          then 
            echo "This is a release branch"
            VERSION=`echo ${{ github.ref_name }} | awk -F"-" '{print $2}'`
            echo "Version is:" $VERSION
            BUILDREF='./tools/config/buildref-AAP_'$VERSION'.json'
          else
            echo "This is a main branch"
            BUILDREF=$PUSH_BUILDREF
          fi
          echo "BUILDREF=$BUILDREF" >> $GITHUB_ENV
          echo 'Build reference file is:' $BUILDREF

      - name: 'Do something else'
        run: |
          echo 'Buildref 1:' $BUILDREF
          echo 'Buildref 2:' ${{ env.BUILDREF }}

      - name: 'Checkout Repository'
        uses: actions/checkout@v3

      - name: 'Checkout artifact repo'
        uses: actions/checkout@v3
        with:
          repository: ansible/aoc-artifacts
          ref: main
          path: ./artifacts
          token: ${{ secrets.GH_TOKEN }}

      - name: 'Groom the artifact repo'
        env:
          ARTIFACT_BRANCH: ${{ needs.build-prep.outputs.artifact_branch }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          cd artifacts
          git pull
          git branch -a
          git status
          cd ..

      - name: Store back to this repo
        run: |
          mkdir -p test
          $(date +%Y-%m-%d-%H-%M-%S > test/bleah)
          git config --global user.email "$(git log --format='%ae' HEAD^!)"
          git config --global user.name "$(git log --format='%an' HEAD^!)"
          git config pull.rebase false
          git add -f test/bleah
          git status
          git commit -m "Commit $GITHUB_SHA [skip ci]"
          git push --set-upstream origin ${{ github.ref_name }}
